#coding=utf8


import re


s = '''# coding: utf-8
"""[yhuang] 库存流水添加货类category_id

Revision ID: e962e27cb06a
Revises: 2b50e8dab956
Create Date: 2018-10-08 18:09:54.345000

"""

# revision identifiers, used by Alembic.
revision = 'e962e27cb06a'
down_revision = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('inventory_transaction', sa.Column('category_id', sa.Integer(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('inventory_transaction', 'category_id')
    # ### end Alembic commands ###
'''

rule = re.compile('^(.*?)def\supgrade\(\)\:\s?\n(.*?)def\sdowngrade\(\)\:\s?\n(.*)$', re.M|re.S)
m = re.search(rule, s)
header, upgrade, downgrade = m.groups()

repl = '''down_revision = None\nbranch_labels = None\ndepends_on = None\n'''
header = re.sub('down_revision\s+=\s+.*?\n', repl, header)
header += '''\ndef upgrade(engine_name):\n    globals()["upgrade_%s" % engine_name]()\n\n\ndef downgrade(engine_name):\n    globals()["downgrade_%s" % engine_name]()\n\n\n\n'''

binds = ['', 'c1', 'c2', 'c3']
ups = []
downs = []
for b in binds:
    ups.append('def upgrade_%s():\n%s'%(b, upgrade))
    downs.append('def downgrade_%s():\n%s\n\n\n'%(b, downgrade))

print header + ''.join([ups[i]+downs[i] for i in range(len(ups))])